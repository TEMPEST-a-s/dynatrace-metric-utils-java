name: Java build with Gradle

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java-version: [ 8, 11, 15 ]
        os: [ ubuntu-latest, windows-latest ]
    
    name: Java ${{ matrix.java-version }} on ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java-version }}

    - name: Compile
      run: ./gradlew assemble
    - name: Test
      run: ./gradlew check

    - name: Upload unit test results
      uses: actions/upload-artifact@v2
      with:
          name: unit-tests-results (JDK ${{ matrix.java-version }} on ${{ matrix.os }})
          path: lib/build/reports/tests/test/

    - name: Upload JAR
      if: ${{ matrix.os == ubuntu-latest }}
      uses: actions/upload-artifact@v2
      with:
        name: jar (JDK ${{ matrix.java-version }})
        path: lib/build/libs/*.jar
        if-no-files-found: error

    # - name: Test if only on certain OS works
    #   run: |
    #         if [ "$RUNNER_OS" == "Linux" ]; then
    #           echo "Running on Linux"
    #         elif [ "$RUNNER_OS" == "Windows" ]; then
    #           echo "Running on Windows"
    #         else
    #           echo "$RUNNER_OS not supported."
    #         fi
    #   shell: bash
  # build-ubuntu:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       java-version: [ 8, 11, 15 ]
  #     fail-fast: false

  #   name: Java ${{ matrix.java-version }} on ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up JDK ${{ matrix.java-version }}
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: ${{ matrix.java-version }}
  #     - name: Grant execute permission for gradlew
  #       run: chmod +x gradlew
  #     - name: Compile
  #       run: ./gradlew assemble
  #     - name: Test
  #       run: ./gradlew check
  #     - name: Upload JAR
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: jar (JDK ${{ matrix.java-version }})
  #         path: lib/build/libs/*.jar
  #         if-no-files-found: error
  #     - name: Upload unit test results
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: unit-tests-results (JDK ${{ matrix.java-version }})
  #         path: lib/build/reports/tests/test/

  # build-windows:
  #   runs-on: windows-latest
  #   strategy:
  #     matrix:
  #       java-version: [ 8, 11, 15 ]
  #     fail-fast: false

  #   name: Java ${{ matrix.java-version }} on windows-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up JDK ${{ matrix.java-version }}
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: ${{ matrix.java-version }}
  #     - name: Test
  #       run: .\gradlew check
